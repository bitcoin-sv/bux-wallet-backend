// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/config": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sharedconfig"
                ],
                "summary": "Get config returns config fields exposed to clients",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_config.PublicConfig"
                        }
                    }
                }
            }
        },
        "/api/v1/contact/accepted/{paymail}": {
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contact"
                ],
                "summary": "Accept a contact",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/contact/confirmed": {
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contact"
                ],
                "summary": "Confirm a contact",
                "parameters": [
                    {
                        "description": "Confirm contact data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_contacts.ConfirmContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/contact/rejected/{paymail}": {
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contact"
                ],
                "summary": "Reject a contact",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/contact/totp": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contact"
                ],
                "summary": "Generate TOTP for contact.",
                "parameters": [
                    {
                        "description": "Contact details",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Contact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/contact/{paymail}": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contact"
                ],
                "summary": "Create or update a contact.",
                "parameters": [
                    {
                        "description": "Upsert contact data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_contacts.UpsertContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/contacts/search": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contact"
                ],
                "summary": "Get all contacts.",
                "parameters": [
                    {
                        "description": "Conditions for filtering contacts",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_contacts.SearchContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SearchContactsResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sign-in": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Sign in user",
                "parameters": [
                    {
                        "description": "User sign in data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_access.SignInUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_access.SignInResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sign-out": {
            "post": {
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Sign out user",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/transaction": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Create transaction.",
                "parameters": [
                    {
                        "description": "Create transaction data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_transactions.CreateTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_transactions.FullTransaction"
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/search": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get all transactions.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_bitcoin-sv_spv-wallet-web-backend_domain_transactions.PaginatedTransactions"
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get transaction by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_transactions.FullTransaction"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "post": {
                "description": "Register new user with given data, paymail is created based on username from sended email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_users.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_users.RegisterResponse"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Check the status of the server",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_users.UserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "filter.QueryParams": {
            "type": "object",
            "properties": {
                "order_by_field": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "sort_direction": {
                    "type": "string"
                }
            }
        },
        "github_com_bitcoin-sv_spv-wallet-web-backend_domain_transactions.PaginatedTransactions": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                },
                "transactions": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "github_com_bitcoin-sv_spv-wallet-web-backend_domain_users.Balance": {
            "type": "object",
            "properties": {
                "bsv": {
                    "type": "number"
                },
                "satoshis": {
                    "type": "integer"
                },
                "usd": {
                    "type": "number"
                }
            }
        },
        "models.Contact": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt is a time when outer model was created.",
                    "type": "string",
                    "example": "2024-02-26T11:00:28.069911Z"
                },
                "deleted_at": {
                    "description": "DeletedAt is a time when outer model was deleted.",
                    "type": "string",
                    "example": "2024-02-26T11:02:28.069911Z"
                },
                "fullName": {
                    "description": "FullName is name which could be shown instead of whole paymail address.",
                    "type": "string",
                    "example": "Test User"
                },
                "id": {
                    "description": "ID is a unique identifier of contact.",
                    "type": "string",
                    "example": "68af358bde7d8641621c7dd3de1a276c9a62cfa9e2d0740494519f1ba61e2f4a"
                },
                "metadata": {
                    "description": "Metadata is a metadata map of outer model.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "key": "value",
                        "key2": "value2"
                    }
                },
                "paymail": {
                    "description": "Paymail is a paymail address related to contact.",
                    "type": "string",
                    "example": "test@spv-wallet.com"
                },
                "pubKey": {
                    "description": "PubKey is a public key related to contact (receiver).",
                    "type": "string",
                    "example": "xpub661MyMwAqRbcGpZVrSHU..."
                },
                "status": {
                    "description": "Status is a contact's current status.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.ContactStatus"
                        }
                    ],
                    "example": "unconfirmed"
                },
                "updated_at": {
                    "description": "UpdatedAt is a time when outer model was updated.",
                    "type": "string",
                    "example": "2024-02-26T11:01:28.069911Z"
                }
            }
        },
        "models.Metadata": {
            "type": "object",
            "additionalProperties": true
        },
        "models.Page": {
            "type": "object",
            "properties": {
                "number": {
                    "description": "Page number",
                    "type": "integer"
                },
                "orderByField": {
                    "description": "Field by which to order the results",
                    "type": "string"
                },
                "size": {
                    "description": "Size of the page",
                    "type": "integer"
                },
                "sortDirection": {
                    "description": "Direction in which to order the results ASC/DSC",
                    "type": "string"
                },
                "totalElements": {
                    "description": "Total count of elements",
                    "type": "integer"
                },
                "totalPages": {
                    "description": "Total number of possible pages",
                    "type": "integer"
                }
            }
        },
        "models.SearchContactsResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "List of records for the response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Contact"
                    }
                },
                "page": {
                    "description": "Pagination details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Page"
                        }
                    ]
                }
            }
        },
        "response.ContactStatus": {
            "type": "string",
            "enum": [
                "unconfirmed",
                "awaiting",
                "confirmed",
                "rejected"
            ],
            "x-enum-varnames": [
                "ContactNotConfirmed",
                "ContactAwaitAccept",
                "ContactConfirmed",
                "ContactRejected"
            ]
        },
        "transports_http_endpoints_api_access.SignInResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "$ref": "#/definitions/github_com_bitcoin-sv_spv-wallet-web-backend_domain_users.Balance"
                },
                "paymail": {
                    "type": "string"
                }
            }
        },
        "transports_http_endpoints_api_access.SignInUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "transports_http_endpoints_api_config.PublicConfig": {
            "type": "object",
            "properties": {
                "experimental_features": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "paymail_domain": {
                    "type": "string"
                }
            }
        },
        "transports_http_endpoints_api_contacts.ConfirmContact": {
            "type": "object",
            "properties": {
                "contact": {
                    "$ref": "#/definitions/models.Contact"
                },
                "passcode": {
                    "type": "string"
                }
            }
        },
        "transports_http_endpoints_api_contacts.SearchContact": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "object",
                    "additionalProperties": true
                },
                "metadata": {
                    "$ref": "#/definitions/models.Metadata"
                },
                "params": {
                    "$ref": "#/definitions/filter.QueryParams"
                }
            }
        },
        "transports_http_endpoints_api_contacts.UpsertContact": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "transports_http_endpoints_api_transactions.CreateTransaction": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "recipient": {
                    "type": "string"
                },
                "satoshis": {
                    "type": "integer"
                }
            }
        },
        "transports_http_endpoints_api_transactions.FullTransaction": {
            "type": "object",
            "properties": {
                "blockHash": {
                    "type": "string"
                },
                "blockHeight": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "fee": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "numberOfInputs": {
                    "type": "integer"
                },
                "numberOfOutputs": {
                    "type": "integer"
                },
                "receiver": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "totalValue": {
                    "type": "integer"
                }
            }
        },
        "transports_http_endpoints_api_users.RegisterResponse": {
            "type": "object",
            "properties": {
                "mnemonic": {
                    "type": "string"
                },
                "paymail": {
                    "type": "string"
                }
            }
        },
        "transports_http_endpoints_api_users.RegisterUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordConfirmation": {
                    "type": "string"
                }
            }
        },
        "transports_http_endpoints_api_users.UserResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "$ref": "#/definitions/github_com_bitcoin-sv_spv-wallet-web-backend_domain_users.Balance"
                },
                "email": {
                    "type": "string"
                },
                "paymail": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "SPV Wallet WEB Backend",
	Description:      "This is an API for the spv-wallet-web-frontend.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
