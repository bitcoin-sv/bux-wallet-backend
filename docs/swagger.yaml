definitions:
  filter.QueryParams:
    properties:
      order_by_field:
        type: string
      page:
        type: integer
      page_size:
        type: integer
      sort_direction:
        type: string
    type: object
  github_com_bitcoin-sv_spv-wallet-web-backend_domain_transactions.PaginatedTransactions:
    properties:
      count:
        type: integer
      pages:
        type: integer
      transactions:
        items: {}
        type: array
    type: object
  github_com_bitcoin-sv_spv-wallet-web-backend_domain_users.Balance:
    properties:
      bsv:
        type: number
      satoshis:
        type: integer
      usd:
        type: number
    type: object
  models.Contact:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      fullName:
        description: FullName is name which could be shown instead of whole paymail
          address.
        example: Test User
        type: string
      id:
        description: ID is a unique identifier of contact.
        example: 68af358bde7d8641621c7dd3de1a276c9a62cfa9e2d0740494519f1ba61e2f4a
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a metadata map of outer model.
        example:
          key: value
          key2: value2
        type: object
      paymail:
        description: Paymail is a paymail address related to contact.
        example: test@spv-wallet.com
        type: string
      pubKey:
        description: PubKey is a public key related to contact (receiver).
        example: xpub661MyMwAqRbcGpZVrSHU...
        type: string
      status:
        allOf:
        - $ref: '#/definitions/response.ContactStatus'
        description: Status is a contact's current status.
        example: unconfirmed
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        example: "2024-02-26T11:01:28.069911Z"
        type: string
    type: object
  models.Metadata:
    additionalProperties: true
    type: object
  models.Page:
    properties:
      number:
        description: Page number
        type: integer
      orderByField:
        description: Field by which to order the results
        type: string
      size:
        description: Size of the page
        type: integer
      sortDirection:
        description: Direction in which to order the results ASC/DSC
        type: string
      totalElements:
        description: Total count of elements
        type: integer
      totalPages:
        description: Total number of possible pages
        type: integer
    type: object
  models.SearchContactsResponse:
    properties:
      content:
        description: List of records for the response
        items:
          $ref: '#/definitions/models.Contact'
        type: array
      page:
        allOf:
        - $ref: '#/definitions/models.Page'
        description: Pagination details
    type: object
  response.ContactStatus:
    enum:
    - unconfirmed
    - awaiting
    - confirmed
    - rejected
    type: string
    x-enum-varnames:
    - ContactNotConfirmed
    - ContactAwaitAccept
    - ContactConfirmed
    - ContactRejected
  transports_http_endpoints_api_access.SignInResponse:
    properties:
      balance:
        $ref: '#/definitions/github_com_bitcoin-sv_spv-wallet-web-backend_domain_users.Balance'
      paymail:
        type: string
    type: object
  transports_http_endpoints_api_access.SignInUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  transports_http_endpoints_api_config.PublicConfig:
    properties:
      experimental_features:
        additionalProperties:
          type: boolean
        type: object
      paymail_domain:
        type: string
    type: object
  transports_http_endpoints_api_contacts.ConfirmContact:
    properties:
      contact:
        $ref: '#/definitions/models.Contact'
      passcode:
        type: string
    type: object
  transports_http_endpoints_api_contacts.SearchContact:
    properties:
      conditions:
        additionalProperties: true
        type: object
      metadata:
        $ref: '#/definitions/models.Metadata'
      params:
        $ref: '#/definitions/filter.QueryParams'
    type: object
  transports_http_endpoints_api_contacts.UpsertContact:
    properties:
      fullName:
        type: string
      metadata:
        additionalProperties: {}
        type: object
    type: object
  transports_http_endpoints_api_transactions.CreateTransaction:
    properties:
      password:
        type: string
      recipient:
        type: string
      satoshis:
        type: integer
    type: object
  transports_http_endpoints_api_transactions.FullTransaction:
    properties:
      blockHash:
        type: string
      blockHeight:
        type: integer
      createdAt:
        type: string
      direction:
        type: string
      fee:
        type: integer
      id:
        type: string
      numberOfInputs:
        type: integer
      numberOfOutputs:
        type: integer
      receiver:
        type: string
      sender:
        type: string
      status:
        type: string
      totalValue:
        type: integer
    type: object
  transports_http_endpoints_api_users.RegisterResponse:
    properties:
      mnemonic:
        type: string
      paymail:
        type: string
    type: object
  transports_http_endpoints_api_users.RegisterUser:
    properties:
      email:
        type: string
      password:
        type: string
      passwordConfirmation:
        type: string
    type: object
  transports_http_endpoints_api_users.UserResponse:
    properties:
      balance:
        $ref: '#/definitions/github_com_bitcoin-sv_spv-wallet-web-backend_domain_users.Balance'
      email:
        type: string
      paymail:
        type: string
      userId:
        type: integer
    type: object
info:
  contact: {}
  description: This is an API for the spv-wallet-web-frontend.
  title: SPV Wallet WEB Backend
  version: "1.0"
paths:
  /api/v1/config:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transports_http_endpoints_api_config.PublicConfig'
      summary: Get config returns config fields exposed to clients
      tags:
      - sharedconfig
  /api/v1/contact/{paymail}:
    put:
      parameters:
      - description: Upsert contact data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/transports_http_endpoints_api_contacts.UpsertContact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create or update a contact.
      tags:
      - contact
  /api/v1/contact/accepted/{paymail}:
    patch:
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Accept a contact
      tags:
      - contact
  /api/v1/contact/confirmed:
    patch:
      parameters:
      - description: Confirm contact data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/transports_http_endpoints_api_contacts.ConfirmContact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Confirm a contact
      tags:
      - contact
  /api/v1/contact/rejected/{paymail}:
    patch:
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Reject a contact
      tags:
      - contact
  /api/v1/contact/totp:
    post:
      parameters:
      - description: Contact details
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Contact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Generate TOTP for contact.
      tags:
      - contact
  /api/v1/contacts/search:
    post:
      parameters:
      - description: Conditions for filtering contacts
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/transports_http_endpoints_api_contacts.SearchContact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchContactsResponse'
      summary: Get all contacts.
      tags:
      - contact
  /api/v1/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: User sign in data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/transports_http_endpoints_api_access.SignInUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transports_http_endpoints_api_access.SignInResponse'
      summary: Sign in user
      tags:
      - user
  /api/v1/sign-out:
    post:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Sign out user
      tags:
      - user
  /api/v1/transaction:
    post:
      parameters:
      - description: Create transaction data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/transports_http_endpoints_api_transactions.CreateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transports_http_endpoints_api_transactions.FullTransaction'
      summary: Create transaction.
      tags:
      - transaction
  /api/v1/transaction/{id}:
    get:
      parameters:
      - description: Transaction id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transports_http_endpoints_api_transactions.FullTransaction'
      summary: Get transaction by id.
      tags:
      - transaction
  /api/v1/transaction/search:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_bitcoin-sv_spv-wallet-web-backend_domain_transactions.PaginatedTransactions'
      summary: Get all transactions.
      tags:
      - transaction
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: Register new user with given data, paymail is created based on
        username from sended email.
      parameters:
      - description: User data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/transports_http_endpoints_api_users.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transports_http_endpoints_api_users.RegisterResponse'
      summary: Register new user
      tags:
      - user
  /status:
    get:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Check the status of the server
      tags:
      - status
  /user:
    get:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transports_http_endpoints_api_users.UserResponse'
      summary: Get user information
      tags:
      - user
swagger: "2.0"
