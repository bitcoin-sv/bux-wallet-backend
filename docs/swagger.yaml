definitions:
  access.SignInResponse:
    properties:
      balance:
        $ref: '#/definitions/users.Balance'
      paymail:
        type: string
    type: object
  access.SignInUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  buxclient.FullTransaction:
    properties:
      blockHash:
        type: string
      blockHeight:
        type: integer
      createdAt:
        type: string
      direction:
        type: string
      fee:
        type: integer
      id:
        type: string
      numberOfInputs:
        type: integer
      numberOfOutputs:
        type: integer
      status:
        type: string
      totalValue:
        type: integer
    type: object
  buxclient.Transaction:
    properties:
      createdAt:
        type: string
      direction:
        type: string
      id:
        type: string
      status:
        type: string
      totalValue:
        type: integer
    type: object
  transactions.CreateTransaction:
    properties:
      password:
        type: string
      recipent:
        type: string
      satoshis:
        type: integer
    type: object
  users.Balance:
    properties:
      bsv:
        type: number
      satoshis:
        type: integer
      usd:
        type: number
    type: object
  users.RegisterResponse:
    properties:
      mnemonic:
        type: string
      paymail:
        type: string
    type: object
  users.RegisterUser:
    properties:
      email:
        type: string
      password:
        type: string
      passwordConfirmation:
        type: string
    type: object
  users.UserResponse:
    properties:
      balance:
        $ref: '#/definitions/users.Balance'
      email:
        type: string
      paymail:
        type: string
      userId:
        type: integer
    type: object
info:
  contact: {}
  description: This is an API for bux wallet.
  title: Bux Wallet API
  version: "1.0"
paths:
  /api/v1/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: User sign in data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/access.SignInUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/access.SignInResponse'
      summary: Sign in user
      tags:
      - user
  /api/v1/sign-out:
    post:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Sign out user
      tags:
      - user
  /api/v1/transaction:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/buxclient.Transaction'
            type: array
      summary: Get all transactions.
      tags:
      - transaction
    post:
      parameters:
      - description: Create transaction data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/transactions.CreateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/buxclient.FullTransaction'
      summary: Create transaction.
      tags:
      - transaction
  /api/v1/transaction/{id}:
    get:
      parameters:
      - description: Transaction id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/buxclient.FullTransaction'
      summary: Get transaction by id.
      tags:
      - transaction
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: Register new user with given data, paymail is created based on
        username from sended email.
      parameters:
      - description: User data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/users.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.RegisterResponse'
      summary: Register new user
      tags:
      - user
  /status:
    get:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Check the status of the server
      tags:
      - status
  /user:
    get:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UserResponse'
      summary: Get user information
      tags:
      - user
swagger: "2.0"
